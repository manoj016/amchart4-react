{"version":3,"sources":["../static/js/responsivedefaults.00984bc6.chunk.js","../node_modules/@amcharts/amcharts4/.internal/core/responsive/ResponsiveDefaults.js","../node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js","../node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js"],"names":["webpackJsonp","239","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__charts_axes_AxisRenderer__","__WEBPACK_IMPORTED_MODULE_1__charts_axes_AxisRendererX__","__WEBPACK_IMPORTED_MODULE_2__charts_axes_AxisRendererY__","__WEBPACK_IMPORTED_MODULE_3__charts_axes_AxisRendererCircular__","__WEBPACK_IMPORTED_MODULE_4__charts_Chart__","__WEBPACK_IMPORTED_MODULE_5__charts_Legend__","__WEBPACK_IMPORTED_MODULE_6__charts_map_SmallMap__","__WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__","relevant","container","pixelWidth","pixelHeight","state","object","stateId","states","create","properties","minLabelPosition","maxLabelPosition","inside","disabled","layout","marginLeft","marginRight","position","marginTop","marginBottom","254","d","SmallMap","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__core_Container__","__WEBPACK_IMPORTED_MODULE_2__core_elements_Rectangle__","__WEBPACK_IMPORTED_MODULE_3__core_utils_List__","__WEBPACK_IMPORTED_MODULE_4__core_utils_Disposer__","__WEBPACK_IMPORTED_MODULE_5__core_Registry__","__WEBPACK_IMPORTED_MODULE_6__core_utils_Color__","__WEBPACK_IMPORTED_MODULE_7__core_utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_8__core_utils_Utils__","__WEBPACK_IMPORTED_MODULE_9__core_utils_Type__","_super","_this","call","this","_chart","className","align","valign","percentHeight","percentWidth","margin","interfaceColors","background","fillOpacity","fill","getFor","events","on","moveToPosition","updateMapSize","seriesContainer","createChild","shouldClone","rectangle","stroke","strokeWidth","strokeOpacity","verticalCenter","horizontalCenter","isMeasured","_disposers","push","applyTheme","prototype","get","_series","handleSeriesAdded","handleSeriesRemoved","enumerable","configurable","event","series","newValue","chart","contains","newSeries","clone","removeValue","dataUsers","parent","interactionsEnabled","invalidate","svgPoint","rectPoint","zoomLevel","scale","Math","min","x","y","geoPoint","svgPointToGeo","zoomToGeoPoint","set","updateRectangle","width","height","ceil","pixelX","pixelY","scaleRatio","afterDraw","moveTo","maskRectangle","processConfig","config","i","len","length","map","hasKey","getKey","registeredClasses","255","ZoomControl","__WEBPACK_IMPORTED_MODULE_2__core_elements_Button__","__WEBPACK_IMPORTED_MODULE_3__core_elements_RoundedRectangle__","__WEBPACK_IMPORTED_MODULE_5__core_utils_Keyboard__","__WEBPACK_IMPORTED_MODULE_6__core_interaction_Interaction__","__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__","__WEBPACK_IMPORTED_MODULE_8__core_Registry__","__WEBPACK_IMPORTED_MODULE_9__core_utils_InterfaceColorSet__","padding","plusButton","label","text","slider","handleBackgroundClick","updateThumbSize","thumb","draggable","handleThumbDrag","minusButton","role","readerLive","readerTitle","language","translate","property","fixLayout","undefined","toFront","toBack","minX","maxX","minY","maxY","sprite","target","spritePoint","maxPower","log","maxZoomLevel","LN2","minPower","minZoomLevel","power","pow","zoomGeoPoint","updateThumb","zoomOut","body","ev","topParent","hasFocused","isKey","isFocused","zoomIn","minHeight","visible","minWidth","isDown","step","stepCount","createBackground"],"mappings":"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","file":"static/js/responsivedefaults.00984bc6.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 239:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__charts_axes_AxisRenderer__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__charts_axes_AxisRendererX__ = __webpack_require__(63);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__charts_axes_AxisRendererY__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__charts_axes_AxisRendererCircular__ = __webpack_require__(105);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__charts_Chart__ = __webpack_require__(79);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__charts_Legend__ = __webpack_require__(106);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__charts_map_SmallMap__ = __webpack_require__(254);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__ = __webpack_require__(255);\n/**\r\n * Defines default Responsive rules\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * RULES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Default rules.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Do not create states for objects that do not have any overrides\r\n */\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Microcharts and sparklines\r\n     * W<=100 || H<=100\r\n     * @todo\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 100) || (container.pixelHeight <= 100)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_0__charts_axes_AxisRenderer__[\"a\" /* AxisRenderer */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.minLabelPosition = 1;\r\n                state.properties.maxLabelPosition = 0;\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Narrow\r\n     * W<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_2__charts_axes_AxisRendererY__[\"a\" /* AxisRendererY */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_3__charts_axes_AxisRendererCircular__[\"a\" /* AxisRendererCircular */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_6__charts_map_SmallMap__[\"a\" /* SmallMap */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            /*if (object instanceof Container && object.parent instanceof ZoomControl && !(object instanceof Button)) {\r\n                let state = object.states.create(stateId);\r\n                state.properties.height = 0;\r\n                return state;\r\n            }*/\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__[\"a\" /* ZoomControl */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.layout = \"vertical\";\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_4__charts_Chart__[\"a\" /* Chart */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.marginLeft = 0;\r\n                state.properties.marginRight = 0;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_5__charts_Legend__[\"a\" /* Legend */] && (object.position == \"left\" || object.position == \"right\")) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.position = \"bottom\";\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Short\r\n     * H<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelHeight <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_1__charts_axes_AxisRendererX__[\"a\" /* AxisRendererX */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_3__charts_axes_AxisRendererCircular__[\"a\" /* AxisRendererCircular */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_6__charts_map_SmallMap__[\"a\" /* SmallMap */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            /*if (object instanceof Container && object.parent instanceof ZoomControl && !(object instanceof Button)) {\r\n                let state = object.states.create(stateId);\r\n                state.properties.width = 100;\r\n                return state;\r\n            }*/\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__[\"a\" /* ZoomControl */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.layout = \"horizontal\";\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_4__charts_Chart__[\"a\" /* Chart */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.marginTop = 0;\r\n                state.properties.marginBottom = 0;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_5__charts_Legend__[\"a\" /* Legend */] && (object.position == \"bottom\" || object.position == \"top\")) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.position = \"right\";\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Super-small\r\n     * W<=200 && H<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 200) && (container.pixelHeight <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Hide legend\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_5__charts_Legend__[\"a\" /* Legend */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__[\"a\" /* ZoomControl */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n]);\r\n//# sourceMappingURL=ResponsiveDefaults.js.map\n\n/***/ }),\n\n/***/ 254:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SmallMap; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_Container__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_elements_Rectangle__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_utils_List__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_utils_Disposer__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__core_Registry__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_utils_Color__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__core_utils_InterfaceColorSet__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__core_utils_Utils__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__core_utils_Type__ = __webpack_require__(2);\n/**\r\n * A module for the mini-map control.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"bird's eye\" view of the whole map.\r\n *\r\n * This control creates a mini-map with the whole of the map, highlighting\r\n * the area which is in the current viewport of the map map.\r\n *\r\n * @see {@link ISmallMapEvents} for a list of available events\r\n * @see {@link ISmallMapAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar SmallMap = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](SmallMap, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SmallMap() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A target map.\r\n         *\r\n         * @type {MutableValueDisposer<MapChart>}\r\n         */\r\n        _this._chart = new __WEBPACK_IMPORTED_MODULE_4__core_utils_Disposer__[\"d\" /* MutableValueDisposer */]();\r\n        _this.className = \"SmallMap\";\r\n        // Set defaults\r\n        _this.align = \"left\";\r\n        _this.valign = \"bottom\";\r\n        _this.percentHeight = 20;\r\n        _this.percentWidth = 20;\r\n        _this.margin(5, 5, 5, 5);\r\n        var interfaceColors = new __WEBPACK_IMPORTED_MODULE_7__core_utils_InterfaceColorSet__[\"a\" /* InterfaceColorSet */]();\r\n        // Set background defailts\r\n        _this.background.fillOpacity = 0.9;\r\n        _this.background.fill = interfaceColors.getFor(\"background\");\r\n        // Set up events\r\n        _this.events.on(\"hit\", _this.moveToPosition, _this);\r\n        _this.events.on(\"maxsizechanged\", _this.updateMapSize, _this);\r\n        // Create a container\r\n        _this.seriesContainer = _this.createChild(__WEBPACK_IMPORTED_MODULE_1__core_Container__[\"a\" /* Container */]);\r\n        _this.seriesContainer.shouldClone = false;\r\n        // Create an outline rectangle\r\n        var rectangle = _this.createChild(__WEBPACK_IMPORTED_MODULE_2__core_elements_Rectangle__[\"a\" /* Rectangle */]);\r\n        rectangle.shouldClone = false;\r\n        rectangle.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n        rectangle.strokeWidth = 1;\r\n        rectangle.strokeOpacity = 0.5;\r\n        rectangle.fill = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Color__[\"b\" /* color */])(); //\"none\";\r\n        rectangle.verticalCenter = \"middle\";\r\n        rectangle.horizontalCenter = \"middle\";\r\n        rectangle.isMeasured = false;\r\n        _this.rectangle = rectangle;\r\n        _this._disposers.push(_this._chart);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SmallMap.prototype, \"series\", {\r\n        /**\r\n         * A list of map series used to draw the mini-map.\r\n         *\r\n         * @readonly\r\n         * @return {List<MapSeries>} Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new __WEBPACK_IMPORTED_MODULE_3__core_utils_List__[\"a\" /* List */]();\r\n                this._series.events.on(\"inserted\", this.handleSeriesAdded, this);\r\n                this._series.events.on(\"removed\", this.handleSeriesRemoved, this);\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new series when they are pushed into a `series` list.\r\n     *\r\n     * @param {IListEvents<MapSeries>[\"inserted\"]} event Event\r\n     */\r\n    SmallMap.prototype.handleSeriesAdded = function (event) {\r\n        var series = event.newValue;\r\n        if (this.chart.series.contains(series)) {\r\n            var newSeries = series.clone();\r\n            this._series.removeValue(series);\r\n            this._series.push(newSeries);\r\n            series = newSeries;\r\n            this.chart.dataUsers.push(newSeries);\r\n        }\r\n        series.chart = this.chart;\r\n        series.parent = this.seriesContainer;\r\n        series.interactionsEnabled = false;\r\n    };\r\n    /**\r\n     * Cleans up after series are removed from Scrollbar.\r\n     *\r\n     * @param {IListEvents<XYSeries>[\"removed\"]}  event  Event\r\n     */\r\n    SmallMap.prototype.handleSeriesRemoved = function (event) {\r\n        //let sourceSeries: MapSeries = event.oldValue;\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Moves main map pan position after click on the small map.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {AMEvent<Sprite, ISpriteEvents>[\"hit\"]}  event  Event\r\n     */\r\n    SmallMap.prototype.moveToPosition = function (event) {\r\n        var svgPoint = event.svgPoint;\r\n        var rectPoint = __WEBPACK_IMPORTED_MODULE_8__core_utils_Utils__[\"I\" /* svgPointToSprite */](svgPoint, this.rectangle);\r\n        var zoomLevel = this.chart.zoomLevel;\r\n        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n        var x = (rectPoint.x + this.rectangle.pixelWidth / 2) / scale * zoomLevel;\r\n        var y = (rectPoint.y + this.rectangle.pixelHeight / 2) / scale * zoomLevel;\r\n        var geoPoint = this.chart.svgPointToGeo({ x: x, y: y });\r\n        this.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);\r\n    };\r\n    Object.defineProperty(SmallMap.prototype, \"chart\", {\r\n        /**\r\n         * @return {MapChart} Chart/map\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart/map that this control is meant for.\r\n         *\r\n         * @param {MapChart}  chart  Chart/map\r\n         */\r\n        set: function (chart) {\r\n            if (this.chart != chart) {\r\n                this._chart.set(chart, new __WEBPACK_IMPORTED_MODULE_4__core_utils_Disposer__[\"c\" /* MultiDisposer */]([\r\n                    chart.events.on(\"zoomlevelchanged\", this.updateRectangle, this),\r\n                    chart.events.on(\"mappositionchanged\", this.updateRectangle, this),\r\n                    chart.events.on(\"scaleratiochanged\", this.updateMapSize, this)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the viewport recangle as per current map zoom/pan position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SmallMap.prototype.updateRectangle = function () {\r\n        var chart = this.chart;\r\n        var zoomLevel = chart.zoomLevel;\r\n        var rectangle = this.rectangle;\r\n        rectangle.width = this.pixelWidth / zoomLevel;\r\n        rectangle.height = this.pixelHeight / zoomLevel;\r\n        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n        var seriesContainer = chart.seriesContainer;\r\n        var x = Math.ceil((zoomLevel * seriesContainer.pixelWidth / 2 - seriesContainer.pixelX) * scale / zoomLevel + rectangle.pixelWidth / 2);\r\n        var y = Math.ceil((zoomLevel * seriesContainer.pixelHeight / 2 - seriesContainer.pixelY) * scale / zoomLevel + rectangle.pixelHeight / 2);\r\n        rectangle.x = x;\r\n        rectangle.y = y;\r\n    };\r\n    /**\r\n     * Update map size so that internal elements can redraw themselves after\r\n     * the size of the small map changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SmallMap.prototype.updateMapSize = function () {\r\n        if (this.chart) {\r\n            this.seriesContainer.scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;\r\n            this.afterDraw();\r\n        }\r\n    };\r\n    /**\r\n     * Update elements after drawing the small map.\r\n     */\r\n    SmallMap.prototype.afterDraw = function () {\r\n        _super.prototype.afterDraw.call(this);\r\n        this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });\r\n        this.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {object}  config  Config\r\n     */\r\n    SmallMap.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if (__WEBPACK_IMPORTED_MODULE_9__core_utils_Type__[\"d\" /* hasValue */](config.series) && __WEBPACK_IMPORTED_MODULE_9__core_utils_Type__[\"e\" /* isArray */](config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    var series = config.series[i];\r\n                    if (__WEBPACK_IMPORTED_MODULE_9__core_utils_Type__[\"d\" /* hasValue */](series) && __WEBPACK_IMPORTED_MODULE_9__core_utils_Type__[\"j\" /* isString */](series) && this.map.hasKey(series)) {\r\n                        config.series[i] = this.map.getKey(series);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return SmallMap;\r\n}(__WEBPACK_IMPORTED_MODULE_1__core_Container__[\"a\" /* Container */]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n__WEBPACK_IMPORTED_MODULE_5__core_Registry__[\"a\" /* registry */].registeredClasses[\"SmallMap\"] = SmallMap;\r\n//# sourceMappingURL=SmallMap.js.map\n\n/***/ }),\n\n/***/ 255:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ZoomControl; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_Container__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_elements_Button__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_elements_RoundedRectangle__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_utils_Disposer__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__core_utils_Keyboard__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_interaction_Interaction__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__core_Registry__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__core_utils_InterfaceColorSet__ = __webpack_require__(10);\n/**\r\n * Zoom control module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ZoomControl = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](ZoomControl, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ZoomControl() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A target map.\r\n         *\r\n         * @type {MutableValueDisposer<MapChart>}\r\n         */\r\n        _this._chart = new __WEBPACK_IMPORTED_MODULE_4__core_utils_Disposer__[\"d\" /* MutableValueDisposer */]();\r\n        _this.className = \"ZoomControl\";\r\n        _this.align = \"right\";\r\n        _this.valign = \"bottom\";\r\n        _this.layout = \"vertical\";\r\n        _this.padding(5, 5, 5, 5);\r\n        var interfaceColors = new __WEBPACK_IMPORTED_MODULE_9__core_utils_InterfaceColorSet__[\"a\" /* InterfaceColorSet */]();\r\n        var plusButton = _this.createChild(__WEBPACK_IMPORTED_MODULE_2__core_elements_Button__[\"a\" /* Button */]);\r\n        plusButton.shouldClone = false;\r\n        plusButton.label.text = \"+\";\r\n        plusButton.width = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n        plusButton.padding(5, 5, 5, 5);\r\n        _this.plusButton = plusButton;\r\n        var slider = _this.createChild(__WEBPACK_IMPORTED_MODULE_1__core_Container__[\"a\" /* Container */]);\r\n        slider.shouldClone = false;\r\n        slider.width = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n        slider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        slider.background.fillOpacity = 0.05;\r\n        slider.background.events.on(\"hit\", _this.handleBackgroundClick, _this);\r\n        slider.events.on(\"sizechanged\", _this.updateThumbSize, _this);\r\n        _this.slider = slider;\r\n        var thumb = slider.createChild(__WEBPACK_IMPORTED_MODULE_2__core_elements_Button__[\"a\" /* Button */]);\r\n        thumb.shouldClone = false;\r\n        thumb.padding(0, 0, 0, 0);\r\n        thumb.draggable = true;\r\n        thumb.events.on(\"drag\", _this.handleThumbDrag, _this);\r\n        _this.thumb = thumb;\r\n        var minusButton = _this.createChild(__WEBPACK_IMPORTED_MODULE_2__core_elements_Button__[\"a\" /* Button */]);\r\n        minusButton.shouldClone = false;\r\n        minusButton.label.text = \"-\";\r\n        minusButton.padding(5, 5, 5, 5);\r\n        _this.minusButton = minusButton;\r\n        // Set roles\r\n        _this.thumb.role = \"slider\";\r\n        _this.thumb.readerLive = \"polite\";\r\n        // Set reader text\r\n        _this.thumb.readerTitle = _this.language.translate(\"Use arrow keys to zoom in and out\");\r\n        _this.minusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom in\");\r\n        _this.plusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom out\");\r\n        _this.applyTheme();\r\n        _this.events.on(\"propertychanged\", function (event) {\r\n            if (event.property == \"layout\") {\r\n                _this.fixLayout();\r\n            }\r\n        });\r\n        _this._disposers.push(_this._chart);\r\n        _this.fixLayout();\r\n        return _this;\r\n    }\r\n    ZoomControl.prototype.fixLayout = function () {\r\n        if (this.layout == \"vertical\") {\r\n            this.width = 40;\r\n            this.height = undefined;\r\n            this.minusButton.width = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.thumb.width = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.plusButton.width = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.slider.width = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.minusButton.marginTop = 1;\r\n            this.plusButton.marginBottom = 2;\r\n            this.slider.height = 0;\r\n            this.minusButton.toFront();\r\n            this.plusButton.toBack();\r\n            this.thumb.minX = 0;\r\n            this.thumb.maxX = 0;\r\n            this.thumb.minY = 0;\r\n        }\r\n        else if (this.layout == \"horizontal\") {\r\n            this.thumb.minX = 0;\r\n            this.thumb.minY = 0;\r\n            this.thumb.maxY = 0;\r\n            this.height = 40;\r\n            this.width = undefined;\r\n            this.minusButton.height = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.minusButton.width = 30;\r\n            this.thumb.height = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.thumb.width = undefined;\r\n            this.plusButton.height = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.plusButton.width = 30;\r\n            this.slider.height = Object(__WEBPACK_IMPORTED_MODULE_7__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.slider.width = 0;\r\n            this.minusButton.marginLeft = 2;\r\n            this.plusButton.marginRight = 2;\r\n            this.minusButton.toBack();\r\n            this.plusButton.toFront();\r\n        }\r\n    };\r\n    /**\r\n     * Handles zoom operation after clicking on the slider background.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {AMEvent<Sprite, ISpriteEvents>[\"hit\"]}  event  Event\r\n     */\r\n    ZoomControl.prototype.handleBackgroundClick = function (event) {\r\n        var sprite = event.target;\r\n        var y = event.spritePoint.y;\r\n        var chart = this.chart;\r\n        var maxPower = Math.log(chart.maxZoomLevel) / Math.LN2;\r\n        var minPower = Math.log(chart.minZoomLevel) / Math.LN2;\r\n        var power = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\r\n        var zoomLevel = Math.pow(2, power);\r\n        chart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\r\n    };\r\n    Object.defineProperty(ZoomControl.prototype, \"chart\", {\r\n        /**\r\n         * @return {MapChart} Map/chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A main chart/map that this zoom control is for.\r\n         *\r\n         * @param {MapChart}  chart  Map/chart\r\n         */\r\n        set: function (chart) {\r\n            var _this = this;\r\n            this._chart.set(chart, new __WEBPACK_IMPORTED_MODULE_4__core_utils_Disposer__[\"c\" /* MultiDisposer */]([\r\n                chart.events.on(\"maxsizechanged\", this.updateThumbSize, this),\r\n                chart.events.on(\"zoomlevelchanged\", this.updateThumb, this),\r\n                this.minusButton.events.on(\"hit\", function () { chart.zoomOut(chart.zoomGeoPoint); }, chart),\r\n                Object(__WEBPACK_IMPORTED_MODULE_6__core_interaction_Interaction__[\"a\" /* getInteraction */])().body.events.on(\"keyup\", function (ev) {\r\n                    if (_this.topParent.hasFocused) {\r\n                        if (__WEBPACK_IMPORTED_MODULE_5__core_utils_Keyboard__[\"a\" /* keyboard */].isKey(ev.event, \"enter\")) {\r\n                            if (_this.minusButton.isFocused) {\r\n                                chart.zoomOut();\r\n                            }\r\n                            else if (_this.plusButton.isFocused) {\r\n                                chart.zoomIn();\r\n                            }\r\n                        }\r\n                        else if (__WEBPACK_IMPORTED_MODULE_5__core_utils_Keyboard__[\"a\" /* keyboard */].isKey(ev.event, \"plus\")) {\r\n                            chart.zoomIn();\r\n                        }\r\n                        else if (__WEBPACK_IMPORTED_MODULE_5__core_utils_Keyboard__[\"a\" /* keyboard */].isKey(ev.event, \"minus\")) {\r\n                            chart.zoomOut();\r\n                        }\r\n                    }\r\n                }, chart),\r\n                this.plusButton.events.on(\"hit\", function () { chart.zoomIn(chart.zoomGeoPoint); }, chart)\r\n            ]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the slider's thumb size based on the available zoom space.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.updateThumbSize = function () {\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            var slider = this.slider;\r\n            var thumb = this.thumb;\r\n            if (this.layout == \"vertical\") {\r\n                thumb.minHeight = Math.min(this.slider.pixelHeight, 20);\r\n                thumb.height = slider.pixelHeight / (chart.maxZoomLevel - chart.minZoomLevel);\r\n                thumb.maxY = slider.pixelHeight - thumb.pixelHeight;\r\n                if (thumb.pixelHeight <= 1) {\r\n                    thumb.visible = false;\r\n                }\r\n                else {\r\n                    thumb.visible = true;\r\n                }\r\n            }\r\n            else {\r\n                thumb.minWidth = Math.min(this.slider.pixelWidth, 20);\r\n                thumb.width = slider.pixelWidth / (chart.maxZoomLevel - chart.minZoomLevel);\r\n                thumb.maxX = slider.pixelWidth - thumb.pixelWidth;\r\n                if (thumb.pixelWidth <= 1) {\r\n                    thumb.visible = false;\r\n                }\r\n                else {\r\n                    thumb.visible = true;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates thumb according to current zoom position from map.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.updateThumb = function () {\r\n        var slider = this.slider;\r\n        var chart = this.chart;\r\n        var thumb = this.thumb;\r\n        if (!thumb.isDown) {\r\n            var step = Math.log(chart.zoomLevel) / Math.LN2;\r\n            if (this.layout == \"vertical\") {\r\n                thumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * (step + 1) / this.stepCount;\r\n            }\r\n            else {\r\n                thumb.x = slider.pixelWidth * step / this.stepCount;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Zooms the actual map when slider position changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.handleThumbDrag = function () {\r\n        var slider = this.slider;\r\n        var chart = this.chart;\r\n        var thumb = this.thumb;\r\n        var step;\r\n        if (this.layout == \"vertical\") {\r\n            step = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight) - 1;\r\n        }\r\n        else {\r\n            step = this.stepCount * thumb.pixelX / slider.pixelWidth;\r\n        }\r\n        var zoomLevel = Math.pow(2, step);\r\n        chart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\r\n    };\r\n    Object.defineProperty(ZoomControl.prototype, \"stepCount\", {\r\n        /**\r\n         * Returns the step countfor the slider grid according to map's min and max\r\n         * zoom level settings.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return {number} Step count\r\n         */\r\n        get: function () {\r\n            return Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a background element for slider control.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return {this} Background\r\n     */\r\n    ZoomControl.prototype.createBackground = function () {\r\n        return new __WEBPACK_IMPORTED_MODULE_3__core_elements_RoundedRectangle__[\"a\" /* RoundedRectangle */]();\r\n    };\r\n    return ZoomControl;\r\n}(__WEBPACK_IMPORTED_MODULE_1__core_Container__[\"a\" /* Container */]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n__WEBPACK_IMPORTED_MODULE_8__core_Registry__[\"a\" /* registry */].registeredClasses[\"ZoomControl\"] = ZoomControl;\r\n//# sourceMappingURL=ZoomControl.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/responsivedefaults.00984bc6.chunk.js","/**\r\n * Defines default Responsive rules\r\n * @hidden\r\n */\r\nimport { AxisRenderer } from \"../../charts/axes/AxisRenderer\";\r\nimport { AxisRendererX } from \"../../charts/axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../../charts/axes/AxisRendererY\";\r\nimport { AxisRendererCircular } from \"../../charts/axes/AxisRendererCircular\";\r\nimport { Chart } from \"../../charts/Chart\";\r\nimport { Legend } from \"../../charts/Legend\";\r\nimport { SmallMap } from \"../../charts/map/SmallMap\";\r\nimport { ZoomControl } from \"../../charts/map/ZoomControl\";\r\n/**\r\n * ============================================================================\r\n * RULES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Default rules.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Do not create states for objects that do not have any overrides\r\n */\r\nexport default [\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Microcharts and sparklines\r\n     * W<=100 || H<=100\r\n     * @todo\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 100) || (container.pixelHeight <= 100)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof AxisRenderer) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.minLabelPosition = 1;\r\n                state.properties.maxLabelPosition = 0;\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Narrow\r\n     * W<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof AxisRendererY) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof AxisRendererCircular) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof SmallMap) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            /*if (object instanceof Container && object.parent instanceof ZoomControl && !(object instanceof Button)) {\r\n                let state = object.states.create(stateId);\r\n                state.properties.height = 0;\r\n                return state;\r\n            }*/\r\n            if (object instanceof ZoomControl) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.layout = \"vertical\";\r\n                return state;\r\n            }\r\n            if (object instanceof Chart) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.marginLeft = 0;\r\n                state.properties.marginRight = 0;\r\n                return state;\r\n            }\r\n            if (object instanceof Legend && (object.position == \"left\" || object.position == \"right\")) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.position = \"bottom\";\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Short\r\n     * H<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelHeight <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof AxisRendererX) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof AxisRendererCircular) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof SmallMap) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            /*if (object instanceof Container && object.parent instanceof ZoomControl && !(object instanceof Button)) {\r\n                let state = object.states.create(stateId);\r\n                state.properties.width = 100;\r\n                return state;\r\n            }*/\r\n            if (object instanceof ZoomControl) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.layout = \"horizontal\";\r\n                return state;\r\n            }\r\n            if (object instanceof Chart) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.marginTop = 0;\r\n                state.properties.marginBottom = 0;\r\n                return state;\r\n            }\r\n            if (object instanceof Legend && (object.position == \"bottom\" || object.position == \"top\")) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.position = \"right\";\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Super-small\r\n     * W<=200 && H<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 200) && (container.pixelHeight <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Hide legend\r\n            if (object instanceof Legend) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            if (object instanceof ZoomControl) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n];\r\n//# sourceMappingURL=ResponsiveDefaults.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@amcharts/amcharts4/.internal/core/responsive/ResponsiveDefaults.js\n// module id = 239\n// module chunks = 3","/**\r\n * A module for the mini-map control.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"bird's eye\" view of the whole map.\r\n *\r\n * This control creates a mini-map with the whole of the map, highlighting\r\n * the area which is in the current viewport of the map map.\r\n *\r\n * @see {@link ISmallMapEvents} for a list of available events\r\n * @see {@link ISmallMapAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar SmallMap = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SmallMap, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SmallMap() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A target map.\r\n         *\r\n         * @type {MutableValueDisposer<MapChart>}\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"SmallMap\";\r\n        // Set defaults\r\n        _this.align = \"left\";\r\n        _this.valign = \"bottom\";\r\n        _this.percentHeight = 20;\r\n        _this.percentWidth = 20;\r\n        _this.margin(5, 5, 5, 5);\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Set background defailts\r\n        _this.background.fillOpacity = 0.9;\r\n        _this.background.fill = interfaceColors.getFor(\"background\");\r\n        // Set up events\r\n        _this.events.on(\"hit\", _this.moveToPosition, _this);\r\n        _this.events.on(\"maxsizechanged\", _this.updateMapSize, _this);\r\n        // Create a container\r\n        _this.seriesContainer = _this.createChild(Container);\r\n        _this.seriesContainer.shouldClone = false;\r\n        // Create an outline rectangle\r\n        var rectangle = _this.createChild(Rectangle);\r\n        rectangle.shouldClone = false;\r\n        rectangle.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n        rectangle.strokeWidth = 1;\r\n        rectangle.strokeOpacity = 0.5;\r\n        rectangle.fill = color(); //\"none\";\r\n        rectangle.verticalCenter = \"middle\";\r\n        rectangle.horizontalCenter = \"middle\";\r\n        rectangle.isMeasured = false;\r\n        _this.rectangle = rectangle;\r\n        _this._disposers.push(_this._chart);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SmallMap.prototype, \"series\", {\r\n        /**\r\n         * A list of map series used to draw the mini-map.\r\n         *\r\n         * @readonly\r\n         * @return {List<MapSeries>} Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new List();\r\n                this._series.events.on(\"inserted\", this.handleSeriesAdded, this);\r\n                this._series.events.on(\"removed\", this.handleSeriesRemoved, this);\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new series when they are pushed into a `series` list.\r\n     *\r\n     * @param {IListEvents<MapSeries>[\"inserted\"]} event Event\r\n     */\r\n    SmallMap.prototype.handleSeriesAdded = function (event) {\r\n        var series = event.newValue;\r\n        if (this.chart.series.contains(series)) {\r\n            var newSeries = series.clone();\r\n            this._series.removeValue(series);\r\n            this._series.push(newSeries);\r\n            series = newSeries;\r\n            this.chart.dataUsers.push(newSeries);\r\n        }\r\n        series.chart = this.chart;\r\n        series.parent = this.seriesContainer;\r\n        series.interactionsEnabled = false;\r\n    };\r\n    /**\r\n     * Cleans up after series are removed from Scrollbar.\r\n     *\r\n     * @param {IListEvents<XYSeries>[\"removed\"]}  event  Event\r\n     */\r\n    SmallMap.prototype.handleSeriesRemoved = function (event) {\r\n        //let sourceSeries: MapSeries = event.oldValue;\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Moves main map pan position after click on the small map.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {AMEvent<Sprite, ISpriteEvents>[\"hit\"]}  event  Event\r\n     */\r\n    SmallMap.prototype.moveToPosition = function (event) {\r\n        var svgPoint = event.svgPoint;\r\n        var rectPoint = $utils.svgPointToSprite(svgPoint, this.rectangle);\r\n        var zoomLevel = this.chart.zoomLevel;\r\n        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n        var x = (rectPoint.x + this.rectangle.pixelWidth / 2) / scale * zoomLevel;\r\n        var y = (rectPoint.y + this.rectangle.pixelHeight / 2) / scale * zoomLevel;\r\n        var geoPoint = this.chart.svgPointToGeo({ x: x, y: y });\r\n        this.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);\r\n    };\r\n    Object.defineProperty(SmallMap.prototype, \"chart\", {\r\n        /**\r\n         * @return {MapChart} Chart/map\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart/map that this control is meant for.\r\n         *\r\n         * @param {MapChart}  chart  Chart/map\r\n         */\r\n        set: function (chart) {\r\n            if (this.chart != chart) {\r\n                this._chart.set(chart, new MultiDisposer([\r\n                    chart.events.on(\"zoomlevelchanged\", this.updateRectangle, this),\r\n                    chart.events.on(\"mappositionchanged\", this.updateRectangle, this),\r\n                    chart.events.on(\"scaleratiochanged\", this.updateMapSize, this)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the viewport recangle as per current map zoom/pan position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SmallMap.prototype.updateRectangle = function () {\r\n        var chart = this.chart;\r\n        var zoomLevel = chart.zoomLevel;\r\n        var rectangle = this.rectangle;\r\n        rectangle.width = this.pixelWidth / zoomLevel;\r\n        rectangle.height = this.pixelHeight / zoomLevel;\r\n        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n        var seriesContainer = chart.seriesContainer;\r\n        var x = Math.ceil((zoomLevel * seriesContainer.pixelWidth / 2 - seriesContainer.pixelX) * scale / zoomLevel + rectangle.pixelWidth / 2);\r\n        var y = Math.ceil((zoomLevel * seriesContainer.pixelHeight / 2 - seriesContainer.pixelY) * scale / zoomLevel + rectangle.pixelHeight / 2);\r\n        rectangle.x = x;\r\n        rectangle.y = y;\r\n    };\r\n    /**\r\n     * Update map size so that internal elements can redraw themselves after\r\n     * the size of the small map changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SmallMap.prototype.updateMapSize = function () {\r\n        if (this.chart) {\r\n            this.seriesContainer.scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;\r\n            this.afterDraw();\r\n        }\r\n    };\r\n    /**\r\n     * Update elements after drawing the small map.\r\n     */\r\n    SmallMap.prototype.afterDraw = function () {\r\n        _super.prototype.afterDraw.call(this);\r\n        this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });\r\n        this.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {object}  config  Config\r\n     */\r\n    SmallMap.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    var series = config.series[i];\r\n                    if ($type.hasValue(series) && $type.isString(series) && this.map.hasKey(series)) {\r\n                        config.series[i] = this.map.getKey(series);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return SmallMap;\r\n}(Container));\r\nexport { SmallMap };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SmallMap\"] = SmallMap;\r\n//# sourceMappingURL=SmallMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js\n// module id = 254\n// module chunks = 3","/**\r\n * Zoom control module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { Button } from \"../../core/elements/Button\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ZoomControl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ZoomControl, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ZoomControl() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A target map.\r\n         *\r\n         * @type {MutableValueDisposer<MapChart>}\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"ZoomControl\";\r\n        _this.align = \"right\";\r\n        _this.valign = \"bottom\";\r\n        _this.layout = \"vertical\";\r\n        _this.padding(5, 5, 5, 5);\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var plusButton = _this.createChild(Button);\r\n        plusButton.shouldClone = false;\r\n        plusButton.label.text = \"+\";\r\n        plusButton.width = percent(100);\r\n        plusButton.padding(5, 5, 5, 5);\r\n        _this.plusButton = plusButton;\r\n        var slider = _this.createChild(Container);\r\n        slider.shouldClone = false;\r\n        slider.width = percent(100);\r\n        slider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        slider.background.fillOpacity = 0.05;\r\n        slider.background.events.on(\"hit\", _this.handleBackgroundClick, _this);\r\n        slider.events.on(\"sizechanged\", _this.updateThumbSize, _this);\r\n        _this.slider = slider;\r\n        var thumb = slider.createChild(Button);\r\n        thumb.shouldClone = false;\r\n        thumb.padding(0, 0, 0, 0);\r\n        thumb.draggable = true;\r\n        thumb.events.on(\"drag\", _this.handleThumbDrag, _this);\r\n        _this.thumb = thumb;\r\n        var minusButton = _this.createChild(Button);\r\n        minusButton.shouldClone = false;\r\n        minusButton.label.text = \"-\";\r\n        minusButton.padding(5, 5, 5, 5);\r\n        _this.minusButton = minusButton;\r\n        // Set roles\r\n        _this.thumb.role = \"slider\";\r\n        _this.thumb.readerLive = \"polite\";\r\n        // Set reader text\r\n        _this.thumb.readerTitle = _this.language.translate(\"Use arrow keys to zoom in and out\");\r\n        _this.minusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom in\");\r\n        _this.plusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom out\");\r\n        _this.applyTheme();\r\n        _this.events.on(\"propertychanged\", function (event) {\r\n            if (event.property == \"layout\") {\r\n                _this.fixLayout();\r\n            }\r\n        });\r\n        _this._disposers.push(_this._chart);\r\n        _this.fixLayout();\r\n        return _this;\r\n    }\r\n    ZoomControl.prototype.fixLayout = function () {\r\n        if (this.layout == \"vertical\") {\r\n            this.width = 40;\r\n            this.height = undefined;\r\n            this.minusButton.width = percent(100);\r\n            this.thumb.width = percent(100);\r\n            this.plusButton.width = percent(100);\r\n            this.slider.width = percent(100);\r\n            this.minusButton.marginTop = 1;\r\n            this.plusButton.marginBottom = 2;\r\n            this.slider.height = 0;\r\n            this.minusButton.toFront();\r\n            this.plusButton.toBack();\r\n            this.thumb.minX = 0;\r\n            this.thumb.maxX = 0;\r\n            this.thumb.minY = 0;\r\n        }\r\n        else if (this.layout == \"horizontal\") {\r\n            this.thumb.minX = 0;\r\n            this.thumb.minY = 0;\r\n            this.thumb.maxY = 0;\r\n            this.height = 40;\r\n            this.width = undefined;\r\n            this.minusButton.height = percent(100);\r\n            this.minusButton.width = 30;\r\n            this.thumb.height = percent(100);\r\n            this.thumb.width = undefined;\r\n            this.plusButton.height = percent(100);\r\n            this.plusButton.width = 30;\r\n            this.slider.height = percent(100);\r\n            this.slider.width = 0;\r\n            this.minusButton.marginLeft = 2;\r\n            this.plusButton.marginRight = 2;\r\n            this.minusButton.toBack();\r\n            this.plusButton.toFront();\r\n        }\r\n    };\r\n    /**\r\n     * Handles zoom operation after clicking on the slider background.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {AMEvent<Sprite, ISpriteEvents>[\"hit\"]}  event  Event\r\n     */\r\n    ZoomControl.prototype.handleBackgroundClick = function (event) {\r\n        var sprite = event.target;\r\n        var y = event.spritePoint.y;\r\n        var chart = this.chart;\r\n        var maxPower = Math.log(chart.maxZoomLevel) / Math.LN2;\r\n        var minPower = Math.log(chart.minZoomLevel) / Math.LN2;\r\n        var power = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\r\n        var zoomLevel = Math.pow(2, power);\r\n        chart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\r\n    };\r\n    Object.defineProperty(ZoomControl.prototype, \"chart\", {\r\n        /**\r\n         * @return {MapChart} Map/chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A main chart/map that this zoom control is for.\r\n         *\r\n         * @param {MapChart}  chart  Map/chart\r\n         */\r\n        set: function (chart) {\r\n            var _this = this;\r\n            this._chart.set(chart, new MultiDisposer([\r\n                chart.events.on(\"maxsizechanged\", this.updateThumbSize, this),\r\n                chart.events.on(\"zoomlevelchanged\", this.updateThumb, this),\r\n                this.minusButton.events.on(\"hit\", function () { chart.zoomOut(chart.zoomGeoPoint); }, chart),\r\n                getInteraction().body.events.on(\"keyup\", function (ev) {\r\n                    if (_this.topParent.hasFocused) {\r\n                        if (keyboard.isKey(ev.event, \"enter\")) {\r\n                            if (_this.minusButton.isFocused) {\r\n                                chart.zoomOut();\r\n                            }\r\n                            else if (_this.plusButton.isFocused) {\r\n                                chart.zoomIn();\r\n                            }\r\n                        }\r\n                        else if (keyboard.isKey(ev.event, \"plus\")) {\r\n                            chart.zoomIn();\r\n                        }\r\n                        else if (keyboard.isKey(ev.event, \"minus\")) {\r\n                            chart.zoomOut();\r\n                        }\r\n                    }\r\n                }, chart),\r\n                this.plusButton.events.on(\"hit\", function () { chart.zoomIn(chart.zoomGeoPoint); }, chart)\r\n            ]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the slider's thumb size based on the available zoom space.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.updateThumbSize = function () {\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            var slider = this.slider;\r\n            var thumb = this.thumb;\r\n            if (this.layout == \"vertical\") {\r\n                thumb.minHeight = Math.min(this.slider.pixelHeight, 20);\r\n                thumb.height = slider.pixelHeight / (chart.maxZoomLevel - chart.minZoomLevel);\r\n                thumb.maxY = slider.pixelHeight - thumb.pixelHeight;\r\n                if (thumb.pixelHeight <= 1) {\r\n                    thumb.visible = false;\r\n                }\r\n                else {\r\n                    thumb.visible = true;\r\n                }\r\n            }\r\n            else {\r\n                thumb.minWidth = Math.min(this.slider.pixelWidth, 20);\r\n                thumb.width = slider.pixelWidth / (chart.maxZoomLevel - chart.minZoomLevel);\r\n                thumb.maxX = slider.pixelWidth - thumb.pixelWidth;\r\n                if (thumb.pixelWidth <= 1) {\r\n                    thumb.visible = false;\r\n                }\r\n                else {\r\n                    thumb.visible = true;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates thumb according to current zoom position from map.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.updateThumb = function () {\r\n        var slider = this.slider;\r\n        var chart = this.chart;\r\n        var thumb = this.thumb;\r\n        if (!thumb.isDown) {\r\n            var step = Math.log(chart.zoomLevel) / Math.LN2;\r\n            if (this.layout == \"vertical\") {\r\n                thumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * (step + 1) / this.stepCount;\r\n            }\r\n            else {\r\n                thumb.x = slider.pixelWidth * step / this.stepCount;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Zooms the actual map when slider position changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.handleThumbDrag = function () {\r\n        var slider = this.slider;\r\n        var chart = this.chart;\r\n        var thumb = this.thumb;\r\n        var step;\r\n        if (this.layout == \"vertical\") {\r\n            step = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight) - 1;\r\n        }\r\n        else {\r\n            step = this.stepCount * thumb.pixelX / slider.pixelWidth;\r\n        }\r\n        var zoomLevel = Math.pow(2, step);\r\n        chart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\r\n    };\r\n    Object.defineProperty(ZoomControl.prototype, \"stepCount\", {\r\n        /**\r\n         * Returns the step countfor the slider grid according to map's min and max\r\n         * zoom level settings.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return {number} Step count\r\n         */\r\n        get: function () {\r\n            return Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a background element for slider control.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return {this} Background\r\n     */\r\n    ZoomControl.prototype.createBackground = function () {\r\n        return new RoundedRectangle();\r\n    };\r\n    return ZoomControl;\r\n}(Container));\r\nexport { ZoomControl };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomControl\"] = ZoomControl;\r\n//# sourceMappingURL=ZoomControl.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js\n// module id = 255\n// module chunks = 3"],"sourceRoot":""}